#!/usr/bin/env perl
# $Id$

# use lib qw(%INST_PLMODDIR%);
use lib qw(../../tools/lib);
use PFL::Getoptv;
use strict;
use warnings;

sub usage {
	die "usage: $0 [-Kv] [-x termarg] deployment [hostspec[:daemon] ...]\n";
}

my %opts;
getoptv('vx:', \%opts) or usage;
usage unless @ARGV;
my $mode = shift @ARGV;
my @uspecs = @ARGV;

for () {
	if (-f ) {
		$hosts = `prof=$mode; . $fn; echo "$@" `;
	}
}

sub echorun {
	warn @_, "\n" if $opts{v};
	system @_ or warn "$!\n";
}

my $term = "xterm";
$term = $ENV{TERM_PROG} if exists $ENV{TERM_PROG};
my $hostname = `hostname`;
chomp $hostname;

die "$mode: bad mode\n" unless exists $dep{$mode};

my $found = 0;
foreach my $spec (@{ $dep{$mode} }) {
	if ($spec->{exec}) {
		next if @uspecs && $spec->{exec} eq "sleep";
		echorun $spec->{exec}, @{ $spec->{arg} };
		next;
	}
	$spec->{name} = $spec->{prog} unless exists $spec->{name};
	if (@uspecs) {
		$found = 0;
		foreach my $uspec (@uspecs) {
			my ($h, $n) = split /:/, $uspec;
			$n = $spec->{name} unless $n;
			if ($n eq $spec->{name} &&
			    $spec->{host} =~ /^\Q$h\E/) {
				$found = 1;
				last;
			}
		}
		next unless $found;
	}
	unless ($spec->{host} =~ /^\Q$hostname\E/) {
		warn "$spec->{host} is not this host ($hostname), skipping\n";
		next;
	}
	$spec->{cmds} = "" unless exists $spec->{cmds};
	my @screen = qw(screen -AxR);
	my $name = $mode.$spec->{name};

	my @xtargs;
	push @xtargs, @{ $opts{x} } if $opts{x};
	push @xtargs, qw(-xrm XTerm*allowTitleOps:false),
	    "-title", "$spec->{host}: $name" if $term =~ /xterm/;

	my $cmd = "";
	if ($opts{K}) {
		push @screen, qw(-X kill);
	} else {
		$cmd = "$spec->{prog}.sh args";
	}
	if (fork) {
		exec $term, @xtargs, qw(-e ssh -t), $spec->{host},
		    "sudo", @screen, "-S", $name,
		    "sh", "-c", "'$cmd'" or die "exec: $!\n";
	}
}

warn "host/daemon spec produced no matches" if @uspecs && !$found;
